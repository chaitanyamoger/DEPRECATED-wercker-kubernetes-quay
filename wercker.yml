build:
    box: google/golang
    steps:

    # Test the project
    - script:
        name: go test
        code: go test ./...

    # Statically build the project
    - script:
        name: go build
        code: CGO_ENABLED=0 go build -a -ldflags '-s' -installsuffix cgo -o app .

    # Create cities-controller.json for initialization
    - script:
        name: create cities-controller.json
        code: ./create_cities-controller.json.sh

    # Copy binary to location that gets passed along to deploy
    - script:
        name: copy binary
        code: cp app cities-service.json cities-controller.json "$WERCKER_OUTPUT_DIR"

deploy:
    box: google/golang
    steps:
    # use the scratch step to build a container from scratch based on the files present
    - internal/docker-scratch-push:
        username: chaitanya28
        password: Chaitanya_28
        cmd: ./app
        tag: 2.0
        ports:
        repository: hub.docker.com/r/chaitanya28/werckerdemo
        registry: https://hub.docker.com

    # Run this to create the rc and service
    initialize:
    - kubectl:
        server: https://10.196.2.109:6443
        username: kubernetes-admin
        insecure-skip-tls-verify: true
        command: --kubeconfig admin.conf  create -f cities-controller.json

    - kubectl:
        server: https://10.196.2.109:6443
        username: kubernetes-admin
        insecure-skip-tls-verify: true
        command: --kubeconfig admin.conf  create -f cities-service.json

    # Update the replica controller to $WERCKER_GIT_COMMIT
    rolling-update:
    - kubectl:
        server: https://10.196.2.109:6443
        username: kubernetes-admin
        insecure-skip-tls-verify: true
        command: --kubeconfig admin.conf rolling-update cities --image-pull-policy=Always
        image: chaitanya28/werckerdemo:2.0
